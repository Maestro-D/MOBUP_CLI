Echelle d'importance : 1 -> 100 : Hight priority -> Low priority

Roman / Mehdi :
	A faire ASAP :
	- Créer les differentes Views de l'appliaction (Login, Home, Game, Inventaire...) P -> 1
	- Créer les Controller pour ces Views (model MVC) P -> 2
	- Permettre la navigation entre ces Views (Login -> Home, Home -> Inventaire, ...) P -> 2

	A faire :
	- Analyser les différents flux reçus du serveur (pour l'inventaire et les déplacements du joueurs) P -> 3
	- Créer des fonctions de parsing pour ces flux. P -> 3

Quentin :
	A faire ASAP :
	- R&D pour la gestion des différents flux entrant (multithreading ? Fork ? Select ?) P -> 1
		-> 1 thread pour l'inventaire : requete au serveur en boucle (/seconde?), pas de mise en place de renvoi de données pour 			le moment. Utilisation de la lib Socket et Thread (Scanner, PrintWriter). Data reçu de type json.
			A prévoir : Dans le cas du changment de personnage controlé, l'inventaire doit lui aussi changer, par quelle 				procédure?
		-> 1 thread pour la map : requete au serveur en boucle (/seconde?). Data reçu de type json.
		
	- R&D pour la gestion des différents flux sortant (inventaire et controles personnage) P -> 1
		-> Pour les controles du joueur : En attente de la mise en place coté serveur.
		-> Pour changement de joueur : Info a avoir : Format de la demande ? Voir équipe serveur.
		-> Pour modification de l'inventaire : En attente de la mise en place serveur vers plugin.

	A faire :
	- Articulation entre les flux entrant et sortant. P -> 2
	- Articulation entre les flux entrant et les Views. P -> 2
	- Articulation entre les flux sortant et les Views. P -> 2

Général :
	A faire :
	- Interet de la mise en place d'une BDD pour l'application P -> 5
	- Gestion de compte utilisateur ? P -> 10
	- Charte Graphique ? P -> 15
	- Gestion des contrôles du joueur ? P -> 4

